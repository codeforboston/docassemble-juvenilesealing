comment: |
  Alternative formatting for an attachment page.
  Unfortunately it also turns it into a question, so
  there's that to deal with.
  
  Not sure how to accomodate mutliple attachments.
  Something to do with `x`?
  
  TODO: Add default values
---
comment: |
  Variables required:
  - atch_itself
  - atch_name

  Variables that have defaults:
  - atch_question
  - atch_subquestion
  - atch_after_download

  - atch_default_email_address
  - atch_email_contents
  - atch_email_subject
  
  - atch_file_extension
  - atch_do_new_window_download
  - atch_download_label
  - atch_do_new_window_email
  - atch_send_email_label
  - atch_open_label
---
id: trigger_attachment_page
scan for variables: False
only sets: trigger_attachment_page
code: |

  # defaults = {
  #   #'atch_itself': None,  # Must be included from interview page
  #   #'atch_name': None,  # Must be included from interview page

  #   # Berit
  #   'atch_file_extension': 'pdf',

  #   'atch_question': 'Your Document is Ready!',
  #   'atch_subquestion': 'You can download it or email it to whoever you want.',
  #   # Neha
  #   'atch_after_download': '',

  #   'atch_default_email_address': '',
  #   'atch_email_subject': 'Your Pre-filled Document',
  #   # Sweta
  #   'atch_email_contents': 'Your pre-filled document should be attached to this email. Thank you and we hope we could help.',
  #   'atch_next_steps_offer': 'In the email, tell me what to do next',

  #   'atch_do_new_window_download': False,

  #   # Me
  #   'atch_download_label': 'Download the document',
  #   'atch_do_new_window_email': False,
  #   'atch_send_email_label': 'Send',
  #   'atch_open_label': 'Open the document in another window'
  # }

  atch_open_link = atch_itself.pdf.url_for(inline=True)
  atch_download_link = atch_itself.pdf.url_for()
  
  #for attr in defaults:
  #  if (not defined(attr)):
  #    define(attr, defaults[attr])

  # This is what actually displays the attachment page
  atch_email_address

  trigger_attachment_page = 'done'
---
template: email_text
subject: ${atch_email_subject}
content: |
  % if ( wants_instructions ):
  ${atch_email_contents}
  % endif
---
id: get_attachment
question: ${atch_question}
subquestion: |
  ${ atch_subquestion }
fields:
  - html: |
      <div class="alert alert-success" role="alert">
        ${email_attachment_created_message}
      </div>
  - html: |
      <a id="openAttachment" class="download-link atch-button" href=${atch_open_link} type="application/pdf" target="_blank">
        ${atch_open_label} <i class="fas fa-external-link-alt"></i>
      </a>
  - html: |
      <a id="downloadAttachment" class="open-link atch-button" href=${atch_download_link} type="application/pdf">
          <i class="fas fa-download"></i> ${atch_download_label}
      </a>
  - ${atch_next_steps_offer}: wants_instructions_in_email
    datatype: yesnowide
    default: True
    show if:
      code: |
        atch_next_steps_offer != ''
  - E-mail: atch_email_address
    datatype: email
    required: False
    default: ${atch_default_email_address}
  - note: ${ action_button_html("#", id_tag="sendAttachmentEmail", classname="atch-button", new_window=atch_do_new_window_email, icon="envelope", label=atch_send_email_label, color="primary", size="md") }
#  - note: ${ action_button_html("#", id_tag="downloadAttachment", classname="atch-button", new_window=atch_do_new_window_download, icon="download", label=atch_download_label, color="primary", size="md") }
  - html: |
      <span id="variables" aria-hidden="True" hidden style="background: red;" email_sent_prefix='${email_sent_prefix}' email_error_msg='${email_error_msg}'> Variables belonging to the interview </span>
  - note: ${atch_after_download}

script: |
  <script>
  
    $("#sendAttachmentEmail").click(function(){
      daShowSpinner();
      
      var vars = document.getElementById('variables')
      var email_sent_prefix = vars.getAttribute('email_sent_prefix')
      var email_error_msg = vars.getAttribute('email_error_msg')

      url_action_call('send_atch_email',
        {
          email_sent_prefix: email_sent_prefix,
          email_error_msg: val('email_error_msg'),
          address: val('atch_email_address'),
          wants_instructions: val('wants_instructions_in_email'),
        },
       function (obj_or_html, result_as_text, response) {
         daHideSpinner();
         if (response.status === 200) {
           //console.log(obj_or_html)
           //console.log(result_as_text)
           //console.log(response)
           flash(obj_or_html.email_sent_prefix + ' ' + obj_or_html.email_address + "!", "success", true);
         } else {
           flash(obj_or_html.email_error_msg, "danger", true)
           url_action_call('log_to_docassemble', {
             message: response.body  // log this object to see its props
           })
         }
       });  // ends url_action_call and callback
     });
  </script>
---
id: send_atch_email
event: send_atch_email
code: |
  #raise Exception("error triggered on purpose because we must")
  wants_instructions = action_argument('wants_instructions')
  address = action_argument('address')
  was_successful = send_email(to=address, template=email_text, attachments=atch_itself)
  json_response(dict(
    email_sent_prefix = action_argument('email_sent_prefix'),
    email_error_msg = action_argument('email_error_msg'),
    was_successful = was_successful,
    email_address = address
  ))
---
id: atch_file_extension
template: atch_file_extension
content: |
  pdf
---
id: atch_question
template: atch_question
content: |
  Your Document is Ready!
---
id: atch_subquestion
template: atch_subquestion
content: |
  You can download it or email it to whoever you want.
---
id: atch_after_download
template: atch_after_download
content: |
  
---
id: atch_default_email_address
template: atch_default_email_address
content: |
  
---
id: atch_email_subject
template: atch_email_subject 
content: |
  Your Pre-filled Document
---
id: atch_email_contents
template: atch_email_contents
content: |
  Your pre-filled document should be attached to this email. Thank you and we hope we could help.
---
id: atch_next_steps_offer
template: atch_next_steps_offer
content: |
  In the email, tell me what to do next
---
id: atch_do_new_window_download
code: |
  atch_do_new_window_download = False
---
id: atch_download_label
template: atch_download_label
content: |
  Download the document
---
id: atch_do_new_window_email
code: |
  atch_do_new_window_email = False
---
id: atch_send_email_label
template: atch_send_email_label
content: |
  Send
---
id: atch_open_label
template: atch_open_label
content: |
  Open the document in another window
---
id: log_to_docassemble
event: log_to_docassemble
code: |
  message = action_argument('message')
  log(message)
---
id: email_attachment_created_message
template: email_attachment_created_message
content: |
  <strong>${atch_name}.${atch_file_extension}</strong>
  has been created for you.
---
id: email_sent_prefix
template: email_sent_prefix
content: |
  <i class="fas fa-check"></i> The email got sent to 
---
id: email_attempt_prefix 
template: email_attempt_prefix
content: |
  We are trying to send the email to 
---
id: email_error_msg 
template: email_error_msg 
content: |
  Sorry about this, but the email didn't get sent. Try giving it some time and then try again.
---